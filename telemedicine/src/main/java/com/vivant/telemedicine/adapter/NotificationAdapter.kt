package com.vivant.telemedicine.adapter

import android.annotation.SuppressLint
import android.content.Context
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.recyclerview.widget.RecyclerView
import com.vivant.telemedicine.R
import com.vivant.telemedicine.common.Utilities
import com.vivant.telemedicine.databinding.ItemNotificationBinding
import com.vivant.telemedicine.model.ListNotificationsModel

class NotificationAdapter(val context: Context,val listener : OnCancelClickListener) : RecyclerView.Adapter<NotificationAdapter.NotificationViewHolder>() {

    private var notificationsList: MutableList<ListNotificationsModel.Notification> = mutableListOf()

    override fun getItemCount(): Int = notificationsList.size

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): NotificationViewHolder =
        NotificationViewHolder(LayoutInflater.from(parent.context).inflate(R.layout.item_notification,parent,false))

    @SuppressLint("SetTextI18n")
    override fun onBindViewHolder(holder: NotificationViewHolder, position: Int) {
        val notification = notificationsList[position]

        when ( notification.type ) {
            "appt_booked" -> {
                holder.txtDesc.text = "Your appointment has been booked with Dr. ${notification.message.doctorName} on ${notification.message.appointmentDate.replace(" 00:00:00","")} at ${notification.message.appointmentTime}."
            }
            "appt_confirmed" -> {
                holder.txtDesc.text = "Your appointment with Dr. ${notification.message.doctorName} on ${notification.message.appointmentDate.replace(" 00:00:00","")} at ${notification.message.appointmentTime} has been confirmed by doctor."
            }
            "appt_rescheduled" -> {
                holder.txtDesc.text = "Dr. ${notification.message.doctorName} has rescheduled the appointment to ${notification.message.appointmentDate.replace(" 00:00:00","")} at ${notification.message.appointmentTime}."
            }
            "appt_cancelled" -> {
                holder.txtDesc.text = "Your appointment with Dr. ${notification.message.doctorName} on ${notification.message.appointmentDate.replace(" 00:00:00","")} at ${notification.message.appointmentTime} has been cancelled by doctor."
            }
            "call_doctorjoined" -> {
                holder.txtDesc.text = "Dr. ${notification.message.doctorName} has joined the call for ${notification.message.appointmentDate.replace(" 00:00:00","")} at ${notification.message.appointmentTime}."
            }
            "consultation_started" -> {
                holder.txtDesc.text = "Consultation has been started by Dr. ${notification.message.doctorName} for appointment on ${notification.message.appointmentDate.replace(" 00:00:00","")} at ${notification.message.appointmentTime}."
            }
            "consultation_ended" -> {
                holder.txtDesc.text = "Consultation has been ended by Dr. ${notification.message.doctorName} for appointment on ${notification.message.appointmentDate.replace(" 00:00:00","")} at ${notification.message.appointmentTime}."
            }
            "presc_generated" -> {
                holder.txtDesc.text = "Prescription has been generated by Dr. ${notification.message.doctorName} for appointment on ${notification.message.appointmentDate.replace(" 00:00:00","")} at ${notification.message.appointmentTime}"
            }
        }

        holder.imgCancel.setOnClickListener {
            listener.onCancelClick(position,notification)
        }
    }

    fun updateList( list: MutableList<ListNotificationsModel.Notification> ) {
        //Utilities.printLogError("NotificationsListCount--->${list.size}")
        notificationsList.clear()
        notificationsList.addAll(list)
        notifyDataSetChanged()
    }

    fun removeItem(position: Int) {
        if ( position != -1 ) {
            Utilities.printLogError("Removed_Item_At--->$position")
            this.notificationsList.removeAt(position)
            this.notifyItemRemoved(position)
            this.notifyDataSetChanged()
            //Utilities.printLogError("NotificationsListCount--->${notificationsList.size}")
        }
    }

    fun getNotificationCount() : Int {
        return notificationsList.size
    }

    interface OnCancelClickListener {
        fun onCancelClick(position: Int,notification : ListNotificationsModel.Notification)
    }

    inner class NotificationViewHolder(view: View) : RecyclerView.ViewHolder(view) {
        val binding = ItemNotificationBinding.bind(view)
        val imgCancel = binding.imgCancel
        val txtDesc = binding.txtDesc
    }

}